\name{resample.fit}
\alias{resample.fit,learn.task,resample.instance,list,character,logical,character-method}
\alias{resample.fit}
\title{resample.fit}
\usage{resample.fit(learn.task, resample.instance, parset, models, type)}
\description{Given the training and test indices (e.g. generated by cross-validation and generally specified by 
the \code{\linkS4class{resample.instance}} object) \code{resample.fit} 
fits the selected learner using the training sets and performs predictions for the test sets. These 
predictions are returned - encapsulated in a \code{\link{resample.result}} object. 
Optionally the fitted models are also stored.}
\value{An object of class \code{\linkS4class{resample.result}}.}
\arguments{\item{learn.task}{[\code{\linkS4class{learn.task}}] \cr
Specifies the learning task for the problem.}
\item{resample.instance}{[\code{\linkS4class{resample.instance}}] \cr
Specifies the training and test indices of the resampled data.}
\item{parset}{[\code{\link{list}}]\cr A list of named elements which specify the hyperparameters of the learner.}
\item{models}{[\code{\link{logical}}] \cr If TRUE a list of the fitted models is included in the result.}
\item{type}{[\code{\link{character}}] \cr 
Only used for classification tasks; specifies the type of predictions -
either probability ("prob") or class ("class").}
}
\examples{library(mlr) 
ct1 <- make.classif.task("lda", data=iris, formula=Species~.)
ct2 <- make.classif.task("rpart.classif", data=iris, formula=Species~.)
rin <- make.cv.instance(iters=3, size=nrow(iris))
f1 <- resample.fit(ct1, resample.instance=rin)	
f2 <- resample.fit(ct2, resample.instance=rin, parset=list(minsplit=10, cp=0.03))}

