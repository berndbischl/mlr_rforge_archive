\name{learn.task-class}
\alias{learn.task-class}
\alias{learn.task}
\title{learn.task}
\description{A learning task is the general description object for a machine learning experiment, which contains 
all initial setup for a learning task. It mainly includes the type of the learning task (e.g. lda), 
a dataframe and a formula. As this is just an abstract base class, 
you should not instantiate it directly but rather inherit from it in the learn.task classes of
your specific classifiers.}
\section{Slots}{\describe{\item{\code{wrapped.learner}:}{(\code{\link{wrapped.learner}}) Object of class \code{\linkS4class{wrapped.learner}}.}\item{\code{data}:}{(\code{\link{data.frame}}) Dataframe which includes all the data for the task.}\item{\code{weights}:}{(\code{\link{numeric}}) An optional vector of weights to be used in the fitting process. Default is a weight of 1 for every case.}\item{\code{formula}:}{(\code{\link{formula}}) A symbolic description of the model to be fitted.}\item{\code{data.desc}:}{(\code{\link{data.desc}}) Contains logical values describing properties of the dataframe e.g. whether it has 
characters or missing values (see desc and \code{\linkS4class{data.desc}}).}}}
\section{Methods}{\describe{\item{\code{\link[=benchmark,learn.task,resample.instance,resample.desc,list,list,logical-method]{benchmark}}}{\code{signature(learn.task = "learn.task", outer.resampling = "resample.instance", inner.resampling = "resample.desc", ranges = "list", measure = "list", all.tune.results = "logical")}: \code{benchmark} conducts a benchmark experiment for a single classifier on a single
data set. This consists of an inner stage and outer stage. At the outer stage a 
tuning set and a test set are repeatedly formed from the data through resampling 
(usually cross-validation or bootstrapping). The respective hyperparameters of the 
classifier are tuned on the tuning set again through an inner resampling process,
the classifier is trained on the complete tuning set with the best found 
hyperparameters and the performance is measured on the test set.}\item{\code{\link[=resample.fit,learn.task,resample.instance,list,logical,character-method]{resample.fit}}}{\code{signature(learn.task = "learn.task", resample.instance = "resample.instance", parset = "list", models = "logical", type = "character")}: Given the training and test indices (e.g. generated by cross-validation and generally specified by 
the \code{\linkS4class{resample.instance}} object) \code{resample.fit} 
fits the selected learner using the training sets and performs predictions for the test sets. These 
predictions are returned - encapsulated in a \code{\link{resample.result}} object. 
Optionally the fitted models are also stored.}\item{\code{\link[=resample.performance,learn.task,resample.instance,resample.result,list-method]{resample.performance}}}{}\item{\code{\link[=initialize,learn.task-method]{initialize}}}{}\item{\code{\link[=[,learn.task-method]{[}}}{}\item{\code{\link[=print,learn.task-method]{print}}}{}\item{\code{\link[=show,learn.task-method]{show}}}{}\item{\code{\link[=train,learn.task,numeric,list-method]{train}}}{\code{signature(learn.task = "learn.task", subset = "numeric", parset = "list")}: Given a \code{\linkS4class{learn.task}} \code{train} creates a model for the learning machine 
which can be used for predictions on new data.}}}

